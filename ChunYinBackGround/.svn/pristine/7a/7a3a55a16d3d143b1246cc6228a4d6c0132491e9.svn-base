<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chunyin.dao.Song_commentsMapper">
  <resultMap id="BaseResultMap" type="com.chunyin.bean.Song_comments">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <id column="song_id" jdbcType="INTEGER" property="songId" />
    <result column="comment_time" jdbcType="VARCHAR" property="commentTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.chunyin.bean.Song_comments">
    <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, user_id, song_id, comment_time
  </sql>
  <sql id="Blob_Column_List">
    comment_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.chunyin.bean.Song_commentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.chunyin.bean.Song_commentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from song_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.chunyin.bean.Song_commentsKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song_comments
    where comment_id = #{commentId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
      and song_id = #{songId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.chunyin.bean.Song_commentsKey">
    delete from song_comments
    where comment_id = #{commentId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
      and song_id = #{songId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chunyin.bean.Song_commentsExample">
    delete from song_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chunyin.bean.Song_comments">
    insert into song_comments (comment_id, user_id, song_id, 
      comment_time, comment_content)
    values (#{commentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{songId,jdbcType=INTEGER}, 
      #{commentTime,jdbcType=VARCHAR}, #{commentContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chunyin.bean.Song_comments">
    insert into song_comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="songId != null">
        song_id,
      </if>
      <if test="commentTime != null">
        comment_time,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="songId != null">
        #{songId,jdbcType=INTEGER},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chunyin.bean.Song_commentsExample" resultType="java.lang.Integer">
    select count(*) from song_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update song_comments
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.songId != null">
        song_id = #{record.songId,jdbcType=INTEGER},
      </if>
      <if test="record.commentTime != null">
        comment_time = #{record.commentTime,jdbcType=VARCHAR},
      </if>
      <if test="record.commentContent != null">
        comment_content = #{record.commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update song_comments
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      song_id = #{record.songId,jdbcType=INTEGER},
      comment_time = #{record.commentTime,jdbcType=VARCHAR},
      comment_content = #{record.commentContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update song_comments
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      song_id = #{record.songId,jdbcType=INTEGER},
      comment_time = #{record.commentTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chunyin.bean.Song_comments">
    update song_comments
    <set>
      <if test="commentTime != null">
        comment_time = #{commentTime,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
      and song_id = #{songId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.chunyin.bean.Song_comments">
    update song_comments
    set comment_time = #{commentTime,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
      and song_id = #{songId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chunyin.bean.Song_comments">
    update song_comments
    set comment_time = #{commentTime,jdbcType=VARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
      and song_id = #{songId,jdbcType=INTEGER}
  </update>
</mapper>